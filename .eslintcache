[{"C:\\Users\\rdelrio\\www\\barbermx\\src\\index.js":"1","C:\\Users\\rdelrio\\www\\barbermx\\src\\App.js":"2","C:\\Users\\rdelrio\\www\\barbermx\\src\\reportWebVitals.js":"3","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Layout.jsx":"4","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\LayoutRouter.jsx":"5","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Navbar\\Navbar.jsx":"6","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Sidebar\\Sidebar.jsx":"7","C:\\Users\\rdelrio\\www\\barbermx\\src\\Routes.js":"8","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Venta\\Venta.jsx":"9","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Agenda.jsx":"10","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Calendar.jsx":"11","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Event.jsx":"12"},{"size":496,"mtime":1609716721999,"results":"13","hashOfConfig":"14"},{"size":775,"mtime":1609733555029,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":946,"mtime":1609722312283,"results":"17","hashOfConfig":"14"},{"size":375,"mtime":1609722312576,"results":"18","hashOfConfig":"14"},{"size":861,"mtime":1609722312575,"results":"19","hashOfConfig":"14"},{"size":1274,"mtime":1609737337142,"results":"20","hashOfConfig":"14"},{"size":482,"mtime":1609737378951,"results":"21","hashOfConfig":"14"},{"size":457,"mtime":1609722312574,"results":"22","hashOfConfig":"14"},{"size":257,"mtime":1609737337565,"results":"23","hashOfConfig":"14"},{"size":8502,"mtime":1609737337509,"results":"24","hashOfConfig":"14"},{"size":7661,"mtime":1609737451101,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"y8o94a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\rdelrio\\www\\barbermx\\src\\index.js",[],["53","54"],"C:\\Users\\rdelrio\\www\\barbermx\\src\\App.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\reportWebVitals.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Layout.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\LayoutRouter.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Navbar\\Navbar.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Sidebar\\Sidebar.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\Routes.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Venta\\Venta.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Agenda.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Calendar.jsx",["55","56","57","58"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import { db } from \"../../index\";\r\n\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport Event from \"./Event\";\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\n\r\nconst Calendario = () => {\r\n\tconst [events, setEvents] = useState([]);\r\n\tconst [openCreate, setOpenCreate] = useState(false);\r\n\tconst [openEdit, setOpenEdit] = useState(false);\r\n\tconst [actualEvent, setActualEvent] = useState(null);\r\n\tconst [view, setView] = useState(\"day\");\r\n\tconst [currentDate, setCurrentDate] = useState(moment());\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRangeOfTimeAndEvents(currentDate);\r\n\t}, [view]);\r\n\r\n\tconst openCreateModal = (ev) => {\r\n\t\tsetActualEvent({\r\n\t\t\tstart: ev.start,\r\n\t\t\tend: ev.end,\r\n\t\t\ttitle: \"\",\r\n\t\t\tresourceId: ev.resourceId,\r\n\t\t});\r\n\t\tsetOpenCreate(true);\r\n\t};\r\n\tconst createEvent = (event) => {\r\n\t\tsetOpenCreate(false);\r\n\t\tif (event.ready) {\r\n\t\t\tlet newEvent = {\r\n\t\t\t\ttitle: event.patient.name,\r\n\t\t\t\tstart: event.start,\r\n\t\t\t\tstartTS: moment(event.start).local().valueOf(),\r\n\t\t\t\tend: event.end,\r\n\t\t\t\tpatientid: event.patient.uid,\r\n\t\t\t\tdia: moment(event.start).format(\"YYYY-MM-DD\"),\r\n\t\t\t\tresourceId: event.resourceId,\r\n\t\t\t};\r\n\t\t\tconsole.log(newEvent);\r\n\t\t\t//   db.collection(\"events\")\r\n\t\t\t//     .add(newEvent)\r\n\t\t\t//     .catch((err) => console.log(\"Error addign event: \", err));\r\n\t\t}\r\n\t};\r\n\r\n\tconst openEditModal = (ev) => {\r\n\t\tsetActualEvent(ev);\r\n\t\tsetOpenEdit(true);\r\n\t};\r\n\r\n\tconst closeEditModal = (event) => {\r\n\t\tsetOpenEdit(false);\r\n\t\tif (event.ready || event.remove) {\r\n\t\t\tif (event.remove) {\r\n\t\t\t\tdeleteEvent(actualEvent);\r\n\t\t\t} else {\r\n\t\t\t\teditEvent({\r\n\t\t\t\t\tevent: actualEvent,\r\n\t\t\t\t\tstart: event.start,\r\n\t\t\t\t\tend: event.end,\r\n\t\t\t\t\tresourceId: event.resourceId,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst editEvent = ({ event, start, end, resourceId }) => {\r\n\t\tlet newEvent = null;\r\n\t\tif (resourceId === undefined || resourceId === null) {\r\n\t\t\tconsole.log(\"undefined\");\r\n\t\t\tnewEvent = {\r\n\t\t\t\t...event,\r\n\t\t\t\tstart,\r\n\t\t\t\tend,\r\n\t\t\t\tdia: moment(start).format(\"YYYY-MM-DD\"),\r\n\t\t\t\tstartTS: moment(start).local().valueOf(),\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tif (event.resourceId === resourceId) {\r\n\t\t\t\tnewEvent = {\r\n\t\t\t\t\t...event,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tdia: moment(start).format(\"YYYY-MM-DD\"),\r\n\t\t\t\t\tstartTS: moment(start).local().valueOf(),\r\n\t\t\t\t\tresourceId: event.resourceId,\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tnewEvent = {\r\n\t\t\t\t\t...event,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tdia: moment(start).format(\"YYYY-MM-DD\"),\r\n\t\t\t\t\tstartTS: moment(start).local().valueOf(),\r\n\t\t\t\t\tresourceId: resourceId,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(\"update event \" + newEvent);\r\n\t\t// db.collection(\"events\")\r\n\t\t//   .doc(event.uid)\r\n\t\t//   .update(newEvent)\r\n\t\t//   .then(() => {\r\n\t\t//     getRangeOfTimeAndEvents(currentDate);\r\n\t\t//   })\r\n\t\t//   .catch((err) => console.error(\"Error updating event: \", err));\r\n\t};\r\n\r\n\tconst deleteEvent = (event) => {\r\n\t\tconsole.log(\"delete event\" + event);\r\n\t\t// db.collection(\"events\")\r\n\t\t//   .doc(event.uid)\r\n\t\t//   .delete()\r\n\t\t//   .catch((err) => console.error(\"Error removing event: \", err));\r\n\t};\r\n\r\n\tconst showView = (actualView) => {\r\n\t\tsetView(actualView);\r\n\t};\r\n\r\n\tconst getRangeOfTimeAndEvents = (date) => {\r\n\t\tsetCurrentDate(date);\r\n\t\tlet start, end;\r\n\t\tif (view === \"day\") {\r\n\t\t\tstart = moment(date).startOf(\"day\");\r\n\t\t\tend = moment(date).endOf(\"day\");\r\n\t\t} else if (view === \"week\") {\r\n\t\t\tstart = moment(date).startOf(\"week\");\r\n\t\t\tend = moment(date).endOf(\"week\");\r\n\t\t} else if (view === \"month\") {\r\n\t\t\tstart = moment(date).startOf(\"month\").subtract(6, \"days\");\r\n\t\t\tend = moment(date).endOf(\"month\").add(6, \"days\");\r\n\t\t} else if (view === \"agenda\") {\r\n\t\t\tstart = moment(date).startOf(\"day\");\r\n\t\t\tend = moment(date).endOf(\"day\").add(3, \"days\");\r\n\t\t}\r\n\t\tlet inicio = moment(start).local().valueOf();\r\n\t\tlet final = moment(end).local().valueOf();\r\n\t\tconsole.log(\"look for events\");\r\n\t\t// db.collection(\"events\")\r\n\t\t//   .where(\"startTS\", \">=\", inicio)\r\n\t\t//   .where(\"startTS\", \"<=\", final)\r\n\t\t//   // .onSnapshot((data) => {\r\n\t\t//   .get()\r\n\t\t//   .then((data) => {\r\n\t\t//     let myEvents = [];\r\n\t\t//     let counter = 0;\r\n\t\t//     let datalength = data.size;\r\n\t\t//     data.forEach((ev) => {\r\n\t\t//       let calStart = new Date(ev.data().start.toMillis());\r\n\t\t//       let calEnd = new Date(ev.data().end.toMillis());\r\n\t\t//       let patid = ev.data().patientid;\r\n\t\t//       db.collection(\"patients\")\r\n\t\t//         .doc(patid)\r\n\t\t//         .get()\r\n\t\t//         .then((pat) => {\r\n\t\t//           let evn = {\r\n\t\t//             ...ev.data(),\r\n\t\t//             start: calStart,\r\n\t\t//             end: calEnd,\r\n\t\t//             uid: ev.id,\r\n\t\t//             title: pat.data().name,\r\n\t\t//           };\r\n\t\t//           myEvents.push(evn);\r\n\t\t//           counter++;\r\n\t\t//           if (counter === datalength) {\r\n\t\t//             setEvents(myEvents);\r\n\t\t//           }\r\n\t\t//         });\r\n\t\t//     });\r\n\t\t//   });\r\n\t};\r\n\r\n\tconst resourceMap = [\r\n\t\t{ resourceId: 1, sala: \"Tomografia\", abr: \"TAC\", color: \"#00bcd4\" },\r\n\t\t{ resourceId: 2, sala: \"Rayos X\", abr: \"RX\", color: \"#FFC107\" },\r\n\t\t{ resourceId: 3, sala: \"Ultrasonido\", abr: \"UL\", color: \"#4caf50\" },\r\n\t\t{ resourceId: 4, sala: \"Mastografia\", abr: \"XM\", color: \"#e91e63\" },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<DragAndDropCalendar\r\n\t\t\t\t\tselectable\r\n\t\t\t\t\tlocalizer={localizer}\r\n\t\t\t\t\tevents={events}\r\n\t\t\t\t\tlength={3}\r\n\t\t\t\t\tonEventDrop={editEvent}\r\n\t\t\t\t\tonSelectSlot={openCreateModal}\r\n\t\t\t\t\tonSelectEvent={openEditModal}\r\n\t\t\t\t\tonView={showView}\r\n\t\t\t\t\tonNavigate={getRangeOfTimeAndEvents}\r\n\t\t\t\t\tdefaultView={view}\r\n\t\t\t\t\tresources={view === \"week\" ? null : resourceMap}\r\n\t\t\t\t\tresourceIdAccessor=\"resourceId\"\r\n\t\t\t\t\tresourceTitleAccessor=\"sala\"\r\n\t\t\t\t\tstep={30}\r\n\t\t\t\t\tmessages={{\r\n\t\t\t\t\t\tprevious: \"<\",\r\n\t\t\t\t\t\tnext: \">\",\r\n\t\t\t\t\t\tnoEventsInRange:\r\n\t\t\t\t\t\t\t\"Sin pacientes agendados para este rango de fechas\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttimeslots={2}\r\n\t\t\t\t\tmin={new Date(\"2019, 1, 1, 08:00\")}\r\n\t\t\t\t\tmax={new Date(\"2019, 1, 1, 20:00\")}\r\n\t\t\t\t\tstyle={{ height: \"72vh\" }}\r\n\t\t\t\t\tcomponents={{\r\n\t\t\t\t\t\tagenda: {\r\n\t\t\t\t\t\t\tevent: (ev) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{ev.event.resourceId ? (\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tto={{ pathname: `/patient/${ev.event.patientid}` }}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: resourceMap[ev.event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${ev.title} - ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tresourceMap[ev.event.resourceId - 1].sala\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<span>{ev.title}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\teventPropGetter={(event) => {\r\n\t\t\t\t\t\tif (event.resourceId === 1 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 2 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 3 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 4 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{view !== \"day\" && view !== \"agenda\" ? (\r\n\t\t\t\t\t<div className=\"leyenda\">\r\n\t\t\t\t\t\t{resourceMap.map((sala) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<b key={sala.resourceId} style={{ color: sala.color }}>\r\n\t\t\t\t\t\t\t\t\t{sala.sala}\r\n\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t{openCreate ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Event\r\n\t\t\t\t\t\t\ttitle=\"Nueva cita\"\r\n\t\t\t\t\t\t\tready={false}\r\n\t\t\t\t\t\t\tremove={false}\r\n\t\t\t\t\t\t\tdelbtn={false}\r\n\t\t\t\t\t\t\topen={openCreate}\r\n\t\t\t\t\t\t\tevent={actualEvent}\r\n\t\t\t\t\t\t\tonClose={createEvent}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : openEdit ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Event\r\n\t\t\t\t\t\t\ttitle=\"Editar cita\"\r\n\t\t\t\t\t\t\tready={false}\r\n\t\t\t\t\t\t\tremove={false}\r\n\t\t\t\t\t\t\tdelbtn={true}\r\n\t\t\t\t\t\t\topen={openEdit}\r\n\t\t\t\t\t\t\tevent={actualEvent}\r\n\t\t\t\t\t\t\tonClose={closeEditModal}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Calendario;\r\n","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Event.jsx",["59","60","61","62","63"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n\tButton,\r\n\tFormControl,\r\n\tInput,\r\n\tInputLabel,\r\n\tIconButton,\r\n\tSelect,\r\n\tDialog,\r\n\tMenuItem,\r\n\tOutlinedInput,\r\n\tZoom,\r\n} from \"@material-ui/core\";\r\n\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nimport MomentUtils from \"@date-io/moment\";\r\n\r\nimport Draggable from \"react-draggable\";\r\n// import { PatientsContext } from \"../../Store\";\r\n\r\nconst Event = (props) => {\r\n\tconst [patient, setPatient] = useState({});\r\n\tconst [patients, setPatients] = useState([]);\r\n\tconst [delbtn, setDelBtn] = useState(props.delbtn);\r\n\tconst [ready, setReady] = useState(props.ready);\r\n\tconst [open, setOpen] = useState(props.open);\r\n\tconst [remove, setRemove] = useState(props.remove);\r\n\tconst [start, setStart] = useState(props.event.start);\r\n\tconst [end, setEnd] = useState(props.event.end);\r\n\tconst [resourceId, setResourceId] = useState(1);\r\n\t// const [patients] = useContext([]);\r\n\tconst [results, setResults] = useState([]);\r\n\tconst [activeStep, setActiveStep] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (ready === true) {\r\n\t\t\tprops.onClose({ start, end, ready, remove, patient, resourceId });\r\n\t\t}\r\n\t}, [ready]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (remove === true) {\r\n\t\t\tprops.onClose({ start, end, ready, remove, patient, resourceId });\r\n\t\t}\r\n\t}, [remove]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (open === false) {\r\n\t\t\tprops.onClose({ start, end, ready, remove, patient, resourceId });\r\n\t\t}\r\n\t}, [open]);\r\n\r\n\tconst mapPropsToState = () => {\r\n\t\tif (props.delbtn) {\r\n\t\t\tpatients.forEach((pat) => {\r\n\t\t\t\tlet res = pat.uid.localeCompare(props.event.patientid);\r\n\t\t\t\tif (res === 0) {\r\n\t\t\t\t\tsetPatient(pat);\r\n\t\t\t\t\tconsole.log(pat);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetDelBtn(props.delbtn);\r\n\t\tsetReady(props.ready);\r\n\t\tsetOpen(props.open);\r\n\t\tsetRemove(props.remove);\r\n\t\tsetStart(props.event.start);\r\n\t\tsetEnd(props.event.end);\r\n\t\tprops.event.resourceId\r\n\t\t\t? setResourceId(props.event.resourceId)\r\n\t\t\t: setResourceId(1);\r\n\t};\r\n\r\n\tconst handleTimeChange = (date, time) => {\r\n\t\tlet mins = moment(date).minutes();\r\n\t\tlet hours = moment(date).hours();\r\n\t\tif (time === \"start\") {\r\n\t\t\tlet newDate = new Date(start);\r\n\t\t\tnewDate.setHours(hours);\r\n\t\t\tnewDate.setMinutes(mins);\r\n\t\t\tsetStart(newDate);\r\n\t\t}\r\n\t\tif (time === \"end\") {\r\n\t\t\tlet newDate = new Date(end);\r\n\t\t\tnewDate.setHours(hours);\r\n\t\t\tnewDate.setMinutes(mins);\r\n\t\t\tsetEnd(newDate);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = (ev) => {\r\n\t\tev.preventDefault();\r\n\t\tsetReady(true);\r\n\t};\r\n\tconst handleRemove = () => {\r\n\t\tconst r = window.confirm(\r\n\t\t\t\"¿Estás seguro que deseas eliminar esta cita de la agenda?\"\r\n\t\t);\r\n\t\tif (r === true) {\r\n\t\t\tsetRemove(true);\r\n\t\t}\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\t// FIlter\r\n\tconst filterPatients = (val) => {\r\n\t\tval = val.trim().toLowerCase();\r\n\t\tif (val === \"\") {\r\n\t\t\tsetResults([]);\r\n\t\t} else {\r\n\t\t\tsetResults(filterAllProperties([...patients], val));\r\n\t\t}\r\n\t};\r\n\r\n\tconst filterAllProperties = (array, value) => {\r\n\t\tlet filtrado = [];\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tlet obj = JSON.stringify(array[i]);\r\n\t\t\tif (obj.toLowerCase().indexOf(value) >= 0) {\r\n\t\t\t\tfiltrado.push(JSON.parse(obj));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn filtrado;\r\n\t};\r\n\r\n\tconst selectPatient = (pat) => {\r\n\t\tsetPatient(pat);\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\t};\r\n\r\n\t// Stepper\r\n\tfunction getStepContent(stepIndex) {\r\n\t\tswitch (stepIndex) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"case0\">\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName=\"titleinput\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"title\">Buscar paciente</InputLabel>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"title\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tonChange={(e) => filterPatients(e.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t<ul className=\"patientList\">\r\n\t\t\t\t\t\t\t{results.length > 0 ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{results.map((patient, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={index % 2 ? \"even\" : \"odd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => selectPatient(patient)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {patient.name} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span> {patient.tel} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"case1\">\r\n\t\t\t\t\t\t{delbtn ? (\r\n\t\t\t\t\t\t\t<Link to={{ pathname: `/patient/${patient.uid}` }}>\r\n\t\t\t\t\t\t\t\t<h3>{props.event.title}</h3>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"newSelected\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t// variant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tonClick={handleBack}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">arrow_back</i>\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t<h3>{patient.name}</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className=\"pickers\">\r\n\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\r\n\t\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"timepicker\"\r\n\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Inicio\"\r\n\t\t\t\t\t\t\t\t\tminutesStep=\"5\"\r\n\t\t\t\t\t\t\t\t\tvalue={start}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => handleTimeChange(date, \"start\")}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\t\tclassName=\"timepicker\"\r\n\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tminutesStep=\"5\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Fin\"\r\n\t\t\t\t\t\t\t\t\tvalue={end}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => handleTimeChange(date, \"end\")}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\tclassName=\"selectSala\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tfullWidth>\r\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"sala\">Sala</InputLabel>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t\tprops.event.resourceId ? props.event.resourceId : resourceId\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue={resourceId}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setResourceId(e.target.value)}\r\n\t\t\t\t\t\t\t\tinput={<OutlinedInput labelWidth={30} id=\"sala\" />}>\r\n\t\t\t\t\t\t\t\t<MenuItem value={1}>Tomografía</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={2}>Rayos X</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={3}>Ultrasonido</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value={4}>Mastografía</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn \"Uknown stepIndex\";\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleBack() {\r\n\t\tsetResults([]);\r\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\taria-labelledby=\"form-dialog-title\"\r\n\t\t\tdisableAutoFocus={delbtn}\r\n\t\t\tonRendered={mapPropsToState}\r\n\t\t\tTransitionComponent={Zoom}>\r\n\t\t\t<Draggable handle=\".header\">\r\n\t\t\t\t<div className=\"eventModal\">\r\n\t\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t\t<h2 id=\"form-dialog-title\"> {props.title} </h2>\r\n\t\t\t\t\t\t{delbtn ? (\r\n\t\t\t\t\t\t\t<IconButton onClick={handleRemove}>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons\">delete</i>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{delbtn ? (\r\n\t\t\t\t\t\t<div className=\"editContent\">\r\n\t\t\t\t\t\t\t{getStepContent(1)}\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tonClick={handleSubmit}>\r\n\t\t\t\t\t\t\t\tGuardar\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"newContent\">\r\n\t\t\t\t\t\t\t{getStepContent(activeStep)}\r\n\t\t\t\t\t\t\t{activeStep === 0 ? (\r\n\t\t\t\t\t\t\t\t<div />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div className=\"btns\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t\t\tfullWidth>\r\n\t\t\t\t\t\t\t\t\t\tGuardar\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Draggable>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n\r\nexport default Event;\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":17,"column":17,"nodeType":"70","messageId":"71","endLine":17,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":26,"column":5,"nodeType":"74","endLine":26,"endColumn":11,"suggestions":"75"},{"ruleId":"68","severity":1,"message":"76","line":147,"column":7,"nodeType":"70","messageId":"71","endLine":147,"endColumn":13},{"ruleId":"68","severity":1,"message":"77","line":148,"column":7,"nodeType":"70","messageId":"71","endLine":148,"endColumn":12},{"ruleId":"68","severity":1,"message":"78","line":1,"column":31,"nodeType":"70","messageId":"71","endLine":1,"endColumn":41},{"ruleId":"68","severity":1,"message":"79","line":27,"column":19,"nodeType":"70","messageId":"71","endLine":27,"endColumn":30},{"ruleId":"72","severity":1,"message":"80","line":43,"column":5,"nodeType":"74","endLine":43,"endColumn":12,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":49,"column":5,"nodeType":"74","endLine":49,"endColumn":13,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"84","line":55,"column":5,"nodeType":"74","endLine":55,"endColumn":11,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'setEvents' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDate' and 'getRangeOfTimeAndEvents'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'inicio' is assigned a value but never used.","'final' is assigned a value but never used.","'useContext' is defined but never used.","'setPatients' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'end', 'patient', 'props', 'remove', 'resourceId', and 'start'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["89"],"React Hook useEffect has missing dependencies: 'end', 'patient', 'props', 'ready', 'resourceId', and 'start'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["90"],"React Hook useEffect has missing dependencies: 'end', 'patient', 'props', 'ready', 'remove', 'resourceId', and 'start'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [currentDate, getRangeOfTimeAndEvents, view]",{"range":"99","text":"100"},"Update the dependencies array to be: [end, patient, props, ready, remove, resourceId, start]",{"range":"101","text":"102"},{"range":"103","text":"102"},"Update the dependencies array to be: [end, open, patient, props, ready, remove, resourceId, start]",{"range":"104","text":"105"},[900,906],"[currentDate, getRangeOfTimeAndEvents, view]",[1264,1271],"[end, patient, props, ready, remove, resourceId, start]",[1403,1411],[1542,1548],"[end, open, patient, props, ready, remove, resourceId, start]"]