[{"C:\\Users\\rdelrio\\www\\barbermx\\src\\index.js":"1","C:\\Users\\rdelrio\\www\\barbermx\\src\\App.js":"2","C:\\Users\\rdelrio\\www\\barbermx\\src\\reportWebVitals.js":"3","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Layout.jsx":"4","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\LayoutRouter.jsx":"5","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Sidebar\\Sidebar.jsx":"6","C:\\Users\\rdelrio\\www\\barbermx\\src\\Routes.js":"7","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Venta\\Venta.jsx":"8","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Agenda.jsx":"9","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Calendar.jsx":"10","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Cita.jsx":"11","C:\\Users\\rdelrio\\www\\barbermx\\src\\Store.js":"12","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Services\\Services.jsx":"13","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Home.jsx":"14","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Weather.jsx":"15","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\MiniCalendar.jsx":"16","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Clock.jsx":"17","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\POS\\POS.jsx":"18","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Cart\\Cart.jsx":"19"},{"size":496,"mtime":1609716721999,"results":"20","hashOfConfig":"21"},{"size":833,"mtime":1621899886006,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":916,"mtime":1620285249404,"results":"24","hashOfConfig":"21"},{"size":375,"mtime":1609722312576,"results":"25","hashOfConfig":"21"},{"size":1962,"mtime":1621918231988,"results":"26","hashOfConfig":"21"},{"size":639,"mtime":1622094023905,"results":"27","hashOfConfig":"21"},{"size":849,"mtime":1620707753303,"results":"28","hashOfConfig":"21"},{"size":308,"mtime":1620451289021,"results":"29","hashOfConfig":"21"},{"size":8730,"mtime":1622442122030,"results":"30","hashOfConfig":"21"},{"size":15018,"mtime":1622502353572,"results":"31","hashOfConfig":"21"},{"size":2754,"mtime":1626156736267,"results":"32","hashOfConfig":"21"},{"size":395,"mtime":1621918555739,"results":"33","hashOfConfig":"21"},{"size":5531,"mtime":1626049861688,"results":"34","hashOfConfig":"21"},{"size":2390,"mtime":1622420066010,"results":"35","hashOfConfig":"21"},{"size":1837,"mtime":1622357849271,"results":"36","hashOfConfig":"21"},{"size":472,"mtime":1622358782327,"results":"37","hashOfConfig":"21"},{"size":216,"mtime":1623651744961,"results":"38","hashOfConfig":"21"},{"size":3583,"mtime":1626154954695,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"y8o94a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rdelrio\\www\\barbermx\\src\\index.js",[],["84","85"],"C:\\Users\\rdelrio\\www\\barbermx\\src\\App.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\reportWebVitals.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Layout.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\LayoutRouter.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Layout\\Sidebar\\Sidebar.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\Routes.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Venta\\Venta.jsx",[],["86","87"],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Agenda.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Calendar.jsx",["88"],"import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// import { db } from \"../../index\";\r\n\r\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { es } from \"date-fns/locale\";\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport {\r\n\tadd,\r\n\tendOfDay,\r\n\tendOfWeek,\r\n\tstartOfDay,\r\n\tstartOfWeek,\r\n\tsub,\r\n\tendOfMonth,\r\n\tstartOfMonth,\r\n\tformat,\r\n\tparse,\r\n\tgetDay,\r\n\tgetTime,\r\n\tparseISO,\r\n} from \"date-fns\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport Cita from \"./Cita\";\r\nconst locales = {\r\n\tes: es,\r\n};\r\n//\r\nconst localizer = dateFnsLocalizer({\r\n\tformat,\r\n\tparse,\r\n\tstartOfWeek,\r\n\tgetDay,\r\n\tlocales,\r\n});\r\nconst DragAndDropCalendar = withDragAndDrop(Calendar);\r\n\r\nconst Calendario = () => {\r\n\tconst barbers = [\"\", \"Barber 1\", \"Barber 2\", \"Barber 3\", \"Barber 4\"];\r\n\tconst [events, setEvents] = useState([]);\r\n\tconst [openCreate, setOpenCreate] = useState(false);\r\n\tconst [openEdit, setOpenEdit] = useState(false);\r\n\tconst [actualEvent, setActualEvent] = useState(null);\r\n\tconst [view, setView] = useState(\"day\");\r\n\tconst [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRangeOfTimeAndEvents(currentDate);\r\n\t}, [view]);\r\n\r\n\tconst openCreateModal = (ev) => {\r\n\t\tsetActualEvent({\r\n\t\t\tstart: ev.start,\r\n\t\t\tend: ev.end,\r\n\t\t\ttitle: \"\",\r\n\t\t\tresourceId: ev.resourceId,\r\n\t\t});\r\n\t\tsetOpenCreate(true);\r\n\t};\r\n\tconst createEvent = async (event) => {\r\n\t\tconsole.log(event);\r\n\t\tsetOpenCreate(false);\r\n\t\tif (event.ready) {\r\n\t\t\tlet newEvent = {\r\n\t\t\t\ttitle: event.client.name,\r\n\t\t\t\tstart: event.start,\r\n\t\t\t\tstartTS: getTime(event.start),\r\n\t\t\t\tend: event.end,\r\n\t\t\t\tclient: event.client,\r\n\t\t\t\t// dia: format(event.start, \"yyyy-MM-dd\"),\r\n\t\t\t\tresourceId: event.barber,\r\n\t\t\t\t// barber: barbers[event.barber - 1],\r\n\t\t\t\tservice: event.service,\r\n\t\t\t};\r\n\t\t\tconsole.log(newEvent);\r\n\t\t\tawait axios.post(\"http://localhost:4000/api/events\", newEvent);\r\n\t\t\tsetEvents([...events, newEvent]);\r\n\t\t\tgetRangeOfTimeAndEvents(currentDate);\r\n\t\t}\r\n\t};\r\n\r\n\tconst openEditModal = (ev) => {\r\n\t\tsetActualEvent(ev);\r\n\t\tsetOpenEdit(true);\r\n\t};\r\n\r\n\tconst closeEditModal = ({\r\n\t\tstart,\r\n\t\tend,\r\n\t\tclient,\r\n\t\tbarber,\r\n\t\tservice,\r\n\t\tready,\r\n\t\tremove,\r\n\t}) => {\r\n\t\tconsole.log({ start, end, client, barber, service, ready });\r\n\t\tsetOpenEdit(false);\r\n\t\tif (ready || remove) {\r\n\t\t\tif (remove) {\r\n\t\t\t\tdeleteEvent(actualEvent);\r\n\t\t\t} else {\r\n\t\t\t\teditEvent({\r\n\t\t\t\t\tevent: actualEvent,\r\n\t\t\t\t\tclient,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tresourceId: barber,\r\n\t\t\t\t\tservice,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst editEvent = async ({\r\n\t\tevent,\r\n\t\tclient,\r\n\t\tstart,\r\n\t\tend,\r\n\t\tresourceId,\r\n\t\tservice,\r\n\t}) => {\r\n\t\tconsole.log({ event, client, start, end, resourceId, service });\r\n\t\tlet newEvent = null;\r\n\t\tif (resourceId === undefined || resourceId === null) {\r\n\t\t\tconsole.log(\"undefined\");\r\n\t\t\tnewEvent = {\r\n\t\t\t\t...event,\r\n\t\t\t\tstart,\r\n\t\t\t\tend,\r\n\t\t\t\tstartTS: getTime(start),\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tif (event.resourceId === resourceId) {\r\n\t\t\t\tnewEvent = {\r\n\t\t\t\t\t...event,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tstartTS: getTime(start),\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tnewEvent = {\r\n\t\t\t\t\t...event,\r\n\t\t\t\t\tstart,\r\n\t\t\t\t\tend,\r\n\t\t\t\t\tstartTS: getTime(start),\r\n\t\t\t\t\tresourceId: resourceId,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (client !== undefined) {\r\n\t\t\tif (event.client._id !== client._id) {\r\n\t\t\t\tnewEvent = { ...newEvent, client, title: client.name };\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (service !== undefined) {\r\n\t\t\tnewEvent = { ...newEvent, service };\r\n\t\t}\r\n\t\tawait axios.put(`http://localhost:4000/api/events/${event._id}`, {\r\n\t\t\t...newEvent,\r\n\t\t});\r\n\t\tgetRangeOfTimeAndEvents(currentDate);\r\n\t};\r\n\r\n\tconst deleteEvent = async (event) => {\r\n\t\tconsole.log(\"delete event\" + JSON.stringify(event));\r\n\t\tawait axios.delete(`http://localhost:4000/api/events/${event._id}`);\r\n\t\tgetRangeOfTimeAndEvents(currentDate);\r\n\t};\r\n\r\n\tconst showView = (actualView) => {\r\n\t\tsetView(actualView);\r\n\t};\r\n\r\n\tconst getRangeOfTimeAndEvents = (date) => {\r\n\t\tsetCurrentDate(date);\r\n\t\tlet start, end;\r\n\t\tif (view === \"day\") {\r\n\t\t\tstart = startOfDay(date);\r\n\t\t\tend = endOfDay(date);\r\n\t\t} else if (view === \"week\") {\r\n\t\t\tstart = startOfWeek(date);\r\n\t\t\tend = endOfWeek(date);\r\n\t\t} else if (view === \"month\") {\r\n\t\t\tstart = sub(startOfMonth(date), { days: 6 });\r\n\t\t\tend = add(endOfMonth(date), { days: 6 });\r\n\t\t} else if (view === \"agenda\") {\r\n\t\t\tstart = startOfDay(date);\r\n\t\t\tend = add(endOfDay(date), { days: 3 });\r\n\t\t}\r\n\t\tlet inicio = getTime(start);\r\n\t\tlet final = getTime(end);\r\n\t\tconsole.log(\"look for events from \" + inicio + \" to \" + final);\r\n\t\t// Search for events\r\n\t\taxios\r\n\t\t\t.get(\"http://localhost:4000/api/events/range\", {\r\n\t\t\t\tparams: { startDate: start, endDate: end },\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tlet myEvents = [];\r\n\t\t\t\tdata.data.data.forEach((event) => {\r\n\t\t\t\t\tlet ev = {\r\n\t\t\t\t\t\t...event,\r\n\t\t\t\t\t\tstart: parseISO(event.start),\r\n\t\t\t\t\t\tend: parseISO(event.end),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tmyEvents.push(ev);\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(myEvents);\r\n\t\t\t\tsetEvents(myEvents);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst resourceMap = [\r\n\t\t{ resourceId: 1, barber: \"Barber 1\", color: \"#00bcd4\" },\r\n\t\t{ resourceId: 2, barber: \"Barber 2\", color: \"#FFC107\" },\r\n\t\t{ resourceId: 3, barber: \"Barber 3\", color: \"#4caf50\" },\r\n\t\t{ resourceId: 4, barber: \"Barber 4\", color: \"#e91e63\" },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<DragAndDropCalendar\r\n\t\t\t\t\tselectable\r\n\t\t\t\t\tculture={\"es\"}\r\n\t\t\t\t\tlocalizer={localizer}\r\n\t\t\t\t\tevents={events}\r\n\t\t\t\t\tlength={3}\r\n\t\t\t\t\tonEventDrop={editEvent}\r\n\t\t\t\t\tonSelectSlot={openCreateModal}\r\n\t\t\t\t\tonSelectEvent={openEditModal}\r\n\t\t\t\t\tonView={showView}\r\n\t\t\t\t\tonNavigate={getRangeOfTimeAndEvents}\r\n\t\t\t\t\tdefaultView={view}\r\n\t\t\t\t\tresources={view === \"week\" ? null : resourceMap}\r\n\t\t\t\t\tresourceIdAccessor=\"resourceId\"\r\n\t\t\t\t\tresourceTitleAccessor=\"barber\"\r\n\t\t\t\t\tstep={30}\r\n\t\t\t\t\tmessages={{\r\n\t\t\t\t\t\tprevious: \"<\",\r\n\t\t\t\t\t\ttoday: \"Hoy\",\r\n\t\t\t\t\t\tmonth: \"Mes\",\r\n\t\t\t\t\t\tweek: \"Semana\",\r\n\t\t\t\t\t\tday: \"Día\",\r\n\t\t\t\t\t\tnext: \">\",\r\n\t\t\t\t\t\tnoEventsInRange: \"Sin clientes agendados para este rango de fechas\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttimeslots={4}\r\n\t\t\t\t\tmin={new Date(\"2019, 1, 1, 08:00\")}\r\n\t\t\t\t\tmax={new Date(\"2019, 1, 1, 22:00\")}\r\n\t\t\t\t\tstyle={{ height: \"85vh\" }}\r\n\t\t\t\t\ttooltipAccessor={(ev) =>\r\n\t\t\t\t\t\t`${ev.title} - ${ev.service[0].description} con ${\r\n\t\t\t\t\t\t\tbarbers[ev.resourceId]\r\n\t\t\t\t\t\t} `\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcomponents={{\r\n\t\t\t\t\t\tagenda: {\r\n\t\t\t\t\t\t\tevent: (ev) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{ev.event.resourceId ? (\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tto={{ pathname: `/client/${ev.event.clientid}` }}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: resourceMap[ev.event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"none\",\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{`${ev.title} - ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tresourceMap[ev.event.resourceId - 1].barber\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<span>{ev.title}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tevent: (ev) => (\r\n\t\t\t\t\t\t\t<div className=\"event\">\r\n\t\t\t\t\t\t\t\t<p>{ev.title}</p>\r\n\t\t\t\t\t\t\t\t<span>{ev.event.service[0].description}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\teventPropGetter={(event) => {\r\n\t\t\t\t\t\tif (event.resourceId === 1 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tborderTopColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 2 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tborderTopColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 3 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tborderTopColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (event.resourceId === 4 && view !== \"agenda\") {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t\t\tborderTopColor: resourceMap[event.resourceId - 1].color,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{view !== \"day\" && view !== \"agenda\" ? (\r\n\t\t\t\t\t<div className=\"leyenda\">\r\n\t\t\t\t\t\t{resourceMap.map((barber) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<b key={barber.resourceId} style={{ color: barber.color }}>\r\n\t\t\t\t\t\t\t\t\t{barber.barber}\r\n\t\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\topen={openCreate}\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\tonClose={() => setOpenCreate(false)}>\r\n\t\t\t\t\t<Cita\r\n\t\t\t\t\t\ttitle=\"Agregar nueva cita\"\r\n\t\t\t\t\t\tevent={actualEvent}\r\n\t\t\t\t\t\tonClose={createEvent}></Cita>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\topen={openEdit}\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\tonClose={() => setOpenEdit(false)}>\r\n\t\t\t\t\t<Cita\r\n\t\t\t\t\t\ttitle=\"Editar cita\"\r\n\t\t\t\t\t\tevent={actualEvent}\r\n\t\t\t\t\t\teditFlag={true}\r\n\t\t\t\t\t\tonClose={closeEditModal}></Cita>\r\n\t\t\t\t</Drawer>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Calendario;\r\n","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Agenda\\Cita.jsx",["89","90"],"import { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { format, getMinutes, getHours, isAfter, isEqual } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { ServicesContext } from \"../../Store\";\r\n\r\nimport \"./Cita.scss\";\r\nimport defaultPP from \"../../assets/pp_default.svg\";\r\n\r\nconst Cita = (props) => {\r\n\tconsole.log(props);\r\n\tconst services = useContext(ServicesContext);\r\n\t// const clients = [\r\n\t// \t{ uid: \"1\", name: \"Ricardo Del Rio\", tel: \"8711126205\" },\r\n\t// \t{ uid: \"2\", name: \"Alberto Saavedra\", tel: \"8712222222\" },\r\n\t// \t{ uid: \"3\", name: \"Osvaldo Aleman\", tel: \"8713333333\" },\r\n\t// \t{ uid: \"4\", name: \"Gerardo Alba\", tel: \"8714444444\" },\r\n\t// \t{ uid: \"5\", name: \"Hector Ramirez\", tel: \"8715555555\" },\r\n\t// ];\r\n\tconst barbers = [\"\", \"Barber 1\", \"Barber 2\", \"Barber 3\", \"Barber 4\"];\r\n\tconst [checkedState, setCheckedState] = useState(\r\n\t\tnew Array(services.length).fill(false)\r\n\t);\r\n\r\n\tconst [clients, setClients] = useState([]);\r\n\tconst [servicesSelected, setServicesSelected] = useState(\r\n\t\tprops.event.service ? props.event.service : []\r\n\t);\r\n\tconst [barber, setBarber] = useState(\r\n\t\tprops.event.resourceId ? props.event.resourceId : 1\r\n\t);\r\n\tconst [client, setClient] = useState(\r\n\t\tprops.event.client ? props.event.client : \"\"\r\n\t);\r\n\tconst [start, setStart] = useState(\r\n\t\tprops.event.start ? props.event.start : \"\"\r\n\t);\r\n\tconst [end, setEnd] = useState(props.event.end ? props.event.end : \"\");\r\n\tconst [errorTime, setErrorTime] = useState(\"\");\r\n\t// flags\r\n\tconst [editServicesFlag, setEditServicesFlag] = useState(false);\r\n\tconst [showServicesCard, setShowServicesCard] = useState(false);\r\n\tconst [serviceSelected, setServiceSelected] = useState(false);\r\n\r\n\tconst [editClientsFlag, setEditClientsFlag] = useState(false);\r\n\tconst [showClientsCard, setShowClientsCard] = useState(false);\r\n\tconst [clientSelected, setClientSelected] = useState(false);\r\n\r\n\tconst [showCardHoras, setShowCardHoras] = useState(false);\r\n\tconst [horasSelected, setHorasSelected] = useState(false);\r\n\r\n\tconst [showBarberSelect, setShowBarberSelect] = useState(false);\r\n\tconst [saveBtnDisabled, setSaveBtnDisabled] = useState(true);\r\n\r\n\t//COMPONENT USEEFFECTS\r\n\r\n\tuseEffect(() => {\r\n\t\t// revisar checked en edit\r\n\t\tif (props.editFlag) {\r\n\t\t\tfindCheckedOnEdit();\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEditServicesFlag(false);\r\n\t\tif (servicesSelected.length > 0) {\r\n\t\t\tsetServiceSelected(true);\r\n\t\t} else {\r\n\t\t\tsetServiceSelected(false);\r\n\t\t\tsetCheckedState(new Array(services.length).fill(false));\r\n\t\t}\r\n\t}, [servicesSelected]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetEditClientsFlag(false);\r\n\t\tif (client !== \"\") {\r\n\t\t\tsetClientSelected(true);\r\n\t\t} else {\r\n\t\t\tsetClientSelected(false);\r\n\t\t}\r\n\t}, [client]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (start !== \"\" || end !== \"\") {\r\n\t\t\tif (isAfter(start, end) || isEqual(start, end)) {\r\n\t\t\t\tsetErrorTime(\"Revisa que las horas sean correctas\");\r\n\t\t\t\tsetHorasSelected(false);\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorTime(\"\");\r\n\t\t\t\tsetHorasSelected(true);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetHorasSelected(false);\r\n\t\t}\r\n\t}, [start, end]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (serviceSelected && barber !== null && clientSelected && horasSelected) {\r\n\t\t\tsetSaveBtnDisabled(false);\r\n\t\t} else {\r\n\t\t\tsetSaveBtnDisabled(true);\r\n\t\t}\r\n\t}, [serviceSelected, barber, clientSelected, horasSelected]);\r\n\r\n\t// COMPONENT FUNCTIONS\r\n\r\n\tconst searchClients = (value) => {\r\n\t\tconsole.log(value);\r\n\t\tif (value.length > 2) {\r\n\t\t\taxios\r\n\t\t\t\t.get(\"http://localhost:4000/api/clients/filtered\", {\r\n\t\t\t\t\tparams: { pre: value },\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tlet myClients = [];\r\n\t\t\t\t\tdata.data.forEach((client) => {\r\n\t\t\t\t\t\tmyClients.push(client);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(myClients);\r\n\t\t\t\t\tsetClients(myClients);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetClients([]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTimeChange = (date, time) => {\r\n\t\tlet mins = getMinutes(date);\r\n\t\tlet hours = getHours(date);\r\n\t\tif (time === \"start\") {\r\n\t\t\tlet newDate = new Date(start);\r\n\t\t\tnewDate.setHours(hours);\r\n\t\t\tnewDate.setMinutes(mins);\r\n\t\t\tsetStart(newDate);\r\n\t\t}\r\n\t\tif (time === \"end\") {\r\n\t\t\tlet newDate = new Date(end);\r\n\t\t\tnewDate.setHours(hours);\r\n\t\t\tnewDate.setMinutes(mins);\r\n\t\t\tsetEnd(newDate);\r\n\t\t}\r\n\t};\r\n\r\n\tconst findCheckedOnEdit = () => {\r\n\t\tlet myEstado = [...checkedState];\r\n\t\tfor (let i = 0; i < props.event.service.length; i++) {\r\n\t\t\tfor (let j = 0; j < services.length; j++) {\r\n\t\t\t\tif (props.event.service[i].description === services[j].description) {\r\n\t\t\t\t\tmyEstado[j] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetCheckedState(myEstado);\r\n\t};\r\n\r\n\tconst handleService = (serv, position) => {\r\n\t\tconsole.log(serv);\r\n\r\n\t\tconst updatedCheckedState = checkedState.map((item, index) =>\r\n\t\t\tindex === position ? !item : item\r\n\t\t);\r\n\r\n\t\tsetCheckedState(updatedCheckedState);\r\n\t};\r\n\tconst saveServices = () => {\r\n\t\tconst myServices = checkedState.reduce((sum, currentState, index) => {\r\n\t\t\tconsole.log(sum);\r\n\t\t\tconsole.log(services[index]);\r\n\t\t\tif (currentState === true) {\r\n\t\t\t\treturn (sum = [\r\n\t\t\t\t\t...sum,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdescription: services[index].description,\r\n\t\t\t\t\t\tprice: services[index].price,\r\n\t\t\t\t\t},\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\treturn sum;\r\n\t\t}, []);\r\n\t\tconsole.log(myServices);\r\n\t\tsetServicesSelected(myServices);\r\n\r\n\t\tif (servicesSelected.length > 0) {\r\n\t\t\tsetServiceSelected(true);\r\n\t\t} else {\r\n\t\t\tsetServiceSelected(false);\r\n\t\t}\r\n\t\tsetShowServicesCard(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"citaC\">\r\n\t\t\t<div className=\"citaHeader\">\r\n\t\t\t\t<b>{props.title}</b>\r\n\t\t\t\t{props.editFlag ? (\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tprops.onClose({\r\n\t\t\t\t\t\t\t\tremove: true,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<i className=\"material-icons\">delete</i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"steps\">\r\n\t\t\t\t<div className=\"step \">\r\n\t\t\t\t\t<b className={serviceSelected ? \"num done\" : \"num\"}>1</b>\r\n\t\t\t\t\t<span className=\"line\"></span>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t{serviceSelected ? (\r\n\t\t\t\t\t\t\t<div className=\"conDatos\">\r\n\t\t\t\t\t\t\t\t<div className=\"tituloCard\">\r\n\t\t\t\t\t\t\t\t\t<b>SERVICIOS AGENDADOS:</b>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"editBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowServicesCard(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetEditServicesFlag(true);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cardContentServicios\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{servicesSelected.map((service) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<li>{service.description}</li>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"barberSelect\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => setShowBarberSelect((prev) => !prev)}>\r\n\t\t\t\t\t\t\t\t\t\t{barbers[barber]}\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">arrow_drop_down</i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tshowBarberSelect\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"dropdown selectDropDown\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"dropdown selectDropDown hide\"\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"option\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetBarber(1);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowBarberSelect(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tBarber 1\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"option\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetBarber(2);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowBarberSelect(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tBarber 2\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"option\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetBarber(3);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowBarberSelect(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tBarber 3\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"option\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetBarber(4);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowBarberSelect(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tBarber 4\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"sinDatos\">\r\n\t\t\t\t\t\t\t\t<div className=\"tituloCard\">\r\n\t\t\t\t\t\t\t\t\t<b>AGREGAR SERVICIO</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button onClick={() => setShowServicesCard((prev) => !prev)}>\r\n\t\t\t\t\t\t\t\t\tSeleccionar service\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={showServicesCard ? \"dropdown\" : \"dropdown hide\"}>\r\n\t\t\t\t\t\t\t{editServicesFlag ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\" dropdownBtn backBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowServicesCard(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">arrow_back</i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"dropdownBtn deleteBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetServicesSelected([]);\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowServicesCard(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">delete</i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName=\"dropdownBtn  cancelBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetServicesSelected([]);\r\n\t\t\t\t\t\t\t\t\t\tsetShowServicesCard(false);\r\n\t\t\t\t\t\t\t\t\t\tsetEditServicesFlag(false);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">clear</i>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div className=\"dropdownList\">\r\n\t\t\t\t\t\t\t\t{services.map((service, index) => (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tvalue={service.desc}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleService(service, index);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\tname={service.description}\r\n\t\t\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={checkedState[index]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<span>{service.description}</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"costo\">${service.price}</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"saveServiceBtn\">\r\n\t\t\t\t\t\t\t\t<button onClick={() => saveServices()}>Guardar</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"step client \">\r\n\t\t\t\t\t<b className={clientSelected ? \"num done\" : \"num\"}>2</b>\r\n\t\t\t\t\t<span className=\"line\"></span>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t{clientSelected ? (\r\n\t\t\t\t\t\t\t<div className=\"conDatos\">\r\n\t\t\t\t\t\t\t\t<div className=\"tituloCard\">\r\n\t\t\t\t\t\t\t\t\t<b>INFORMACIÓN DEL CLIENTE:</b>\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"editBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowClientsCard(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetEditClientsFlag(true);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cardContentClient\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tsrc={client.avatar === \"\" ? defaultPP : client.avatar}\r\n\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"clientRight\">\r\n\t\t\t\t\t\t\t\t\t\t<h3>{client.name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"clientInf\">\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Tel:</b>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{client.tel} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t<b>Email:</b>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{client.email} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"sinDatos\">\r\n\t\t\t\t\t\t\t\t<div className=\"tituloCard\">\r\n\t\t\t\t\t\t\t\t\t<b>AGREGAR CLIENTE</b>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<button onClick={() => setShowClientsCard((prev) => !prev)}>\r\n\t\t\t\t\t\t\t\t\tSeleccionar client\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={showClientsCard ? \"dropdown\" : \"dropdown hide\"}>\r\n\t\t\t\t\t\t\t{editClientsFlag ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\" dropdownBtn backBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowClientsCard(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">arrow_back</i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"dropdownBtn deleteBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetClient(\"\");\r\n\t\t\t\t\t\t\t\t\t\t\tsetShowClientsCard(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">delete</i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName=\"dropdownBtn  cancelBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetClient(\"\");\r\n\t\t\t\t\t\t\t\t\t\tsetShowClientsCard(false);\r\n\t\t\t\t\t\t\t\t\t\tsetEditClientsFlag(false);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">clear</i>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\t\t\tname=\"searchClients\"\r\n\t\t\t\t\t\t\t\tid=\"searchClients\"\r\n\t\t\t\t\t\t\t\tclassName=\"searchbarInDropdown\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Buscar...\"\r\n\t\t\t\t\t\t\t\tonKeyUp={(ev) => searchClients(ev.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"dropdownList\">\r\n\t\t\t\t\t\t\t\t{clients &&\r\n\t\t\t\t\t\t\t\t\tclients.map((client, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={client.name}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowClientsCard(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetClient(client);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{client.name}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"costo\">{client.tel}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"step horas \">\r\n\t\t\t\t\t<b className={horasSelected ? \"num done\" : \"num\"}>3</b>\r\n\t\t\t\t\t<span></span>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"conDatos\">\r\n\t\t\t\t\t\t\t<div className=\"tituloCard\">\r\n\t\t\t\t\t\t\t\t<b>FECHA Y HORA DE LA CITA:</b>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tclassName=\"editBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetShowCardHoras(true);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"cardContentHoras\">\r\n\t\t\t\t\t\t\t\t<b>{`${format(\r\n\t\t\t\t\t\t\t\t\tstart,\r\n\t\t\t\t\t\t\t\t\t\"EEEE',' dd 'de' MMMM 'de' hh:mm aaaa 'a'\",\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tlocale: es,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t)} ${format(end, \"hh:mm aaaa\")}`}</b>\r\n\t\t\t\t\t\t\t\t{errorTime !== \"\" ? (\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">error</i>\r\n\t\t\t\t\t\t\t\t\t\t{errorTime}\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={showCardHoras ? \"dropdown\" : \"dropdown hide\"}>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"dropdownBtn  cancelBtn\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetShowCardHoras(false);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<i className=\"material-icons\">clear</i>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t<div className=\"timepickers\">\r\n\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"timepicker\"\r\n\t\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Inicio\"\r\n\t\t\t\t\t\t\t\t\t\tminutesStep=\"5\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={start}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => handleTimeChange(date, \"start\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TimePicker\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"timepicker\"\r\n\t\t\t\t\t\t\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tminutesStep=\"5\"\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Fin\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={end}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(date) => handleTimeChange(date, \"end\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"actions\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"cancelBtn\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.onClose({\r\n\t\t\t\t\t\t\tready: false,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tCancelar\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={saveBtnDisabled}\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tsaveBtnDisabled ? \"saveBtn saveBtnDisabled\" : \"saveBtn saveBtnHover\"\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tprops.onClose({\r\n\t\t\t\t\t\t\tstart,\r\n\t\t\t\t\t\t\tend,\r\n\t\t\t\t\t\t\tclient,\r\n\t\t\t\t\t\t\tbarber,\r\n\t\t\t\t\t\t\tservice: servicesSelected,\r\n\t\t\t\t\t\t\tready: true,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tAgendar\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cita;\r\n","C:\\Users\\rdelrio\\www\\barbermx\\src\\Store.js",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Services\\Services.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Home.jsx",["91"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { endOfDay, startOfDay, parseISO, format } from \"date-fns\";\r\nimport {\r\n\tAccordion,\r\n\tAccordionDetails,\r\n\tAccordionSummary,\r\n\tButton,\r\n\tDrawer,\r\n} from \"@material-ui/core\";\r\n\r\nimport nothingYet from \"../../assets/nothingyet.png\";\r\nimport defaultPP from \"../../assets/pp_default.svg\";\r\n\r\nimport \"./Home.scss\";\r\nimport Weather from \"./Weather\";\r\nimport MiniCalendar from \"./MiniCalendar\";\r\nimport Clock from \"./Clock\";\r\nimport POS from \"./POS/POS\";\r\nimport Cart from \"./Cart/Cart\";\r\n\r\nfunction Home() {\r\n\tconst barbers = [\"\", \"Barber 1\", \"Barber 2\", \"Barber 3\", \"Barber 4\"];\r\n\tconst colores = [\"\", \"#00bcd4\", \"#FFC107\", \"#4caf50\", \"#e91e63\"];\r\n\r\n\tconst [events, setEvents] = useState([]);\r\n\tconst [currentDate, setCurrentDate] = useState(new Date());\r\n\tconst [expanded, setExpanded] = useState(false);\r\n\r\n\tconst [openPOS, setOpenPOS] = useState(false);\r\n\tconst [openCart, setOpenCart] = useState(false);\r\n\tconst [actualTransaction, setActualTransaction] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetEvents(currentDate);\r\n\t}, []);\r\n\r\n\tconst getEvents = (date) => {\r\n\t\tsetCurrentDate(date);\r\n\t\tlet start, end;\r\n\t\tstart = startOfDay(date);\r\n\t\tend = endOfDay(date);\r\n\t\tconsole.log(\"look for events from \" + date);\r\n\t\t// Search for events\r\n\t\taxios\r\n\t\t\t.get(\"http://localhost:4000/api/events/range\", {\r\n\t\t\t\tparams: { startDate: start, endDate: end },\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tlet myEvents = [];\r\n\t\t\t\tdata.data.data.forEach((event) => {\r\n\t\t\t\t\tlet ev = {\r\n\t\t\t\t\t\t...event,\r\n\t\t\t\t\t\tstart: parseISO(event.start),\r\n\t\t\t\t\t\tend: parseISO(event.end),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tmyEvents.push(ev);\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(myEvents);\r\n\t\t\t\tsetEvents(myEvents);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleExpandedPanel = (panel) => (evnt, isExpanded) => {\r\n\t\tsetExpanded(isExpanded ? panel : false);\r\n\t};\r\n\r\n\tconst transactionDone = async (transaction) => {\r\n\t\tconsole.log(transaction);\r\n\t\tsetOpenPOS(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"HomeC\">\r\n\t\t\t<div className=\"superior\">\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t<i className=\"material-icons\">home</i> Home\r\n\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"weather\">\r\n\t\t\t\t\t<Weather />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"grid\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t{events.length > 0 ? (\r\n\t\t\t\t\t\t<div className=\"withEvents\">\r\n\t\t\t\t\t\t\t{events.map((evnt, i) => (\r\n\t\t\t\t\t\t\t\t<Accordion\r\n\t\t\t\t\t\t\t\t\texpanded={expanded === i}\r\n\t\t\t\t\t\t\t\t\tonChange={handleExpandedPanel(i)}\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\tclassName=\"acordion\">\r\n\t\t\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\t\t\taria-controls=\"panel1bh-content\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"panel1bh-header\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tborderLeftColor: colores[evnt.resourceId],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\texpanded === i\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"acordionHeader\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"acordionHeader borderRadiusHeader\"\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"acordionHeaderContent\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"tiempoCita\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>{format(evnt.start, \"HH:mm\")}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{barbers[evnt.resourceId]}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"nombreCita\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={defaultPP} alt=\"PP\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{evnt.title}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{expanded === i ? null : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{evnt.service.length > 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `${evnt.service[0].description} + ${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tevnt.service.length - 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: evnt.service[0].description}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons pending\">pending_actions</i>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t\t\t<AccordionDetails\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tborderLeftColor: colores[evnt.resourceId],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"acordionDetails\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"acordionDetailsGrid\">\r\n\t\t\t\t\t\t\t\t\t\t\t{evnt.service.map((serv) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"serviceItem\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{serv.description}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{serv.price}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"actionBtn addToCartBtn\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetActualTransaction(evnt);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetOpenCart(true);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">shopping_cart</i>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"actionBtn cobrarBtn\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetActualTransaction(evnt);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetOpenPOS(true);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tCobrar\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"withoutEvents\">\r\n\t\t\t\t\t\t\t<img src={nothingYet} alt=\"nothingYetImg\" />\r\n\t\t\t\t\t\t\t<h1>No hay citas el día de hoy</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<MiniCalendar onChange={(d) => getEvents(d)} />\r\n\t\t\t\t\t<Clock />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName=\"POSDrawer\"\r\n\t\t\t\topen={openPOS}\r\n\t\t\t\tanchor=\"right\"\r\n\t\t\t\tonClose={() => setOpenPOS(false)}>\r\n\t\t\t\t<POS transaction={actualTransaction} onClose={transactionDone}></POS>\r\n\t\t\t</Drawer>\r\n\t\t\t<Drawer\r\n\t\t\t\tclassName=\"CartDrawer\"\r\n\t\t\t\topen={openCart}\r\n\t\t\t\tanchor=\"right\"\r\n\t\t\t\tonClose={() => setOpenCart(false)}>\r\n\t\t\t\t<Cart transaction={actualTransaction} onClose={transactionDone}></Cart>\r\n\t\t\t</Drawer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Weather.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\MiniCalendar.jsx",["92"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { subDays, addDays, format } from \"date-fns\";\r\nimport { es } from \"date-fns/locale\";\r\n\r\nimport \"./MiniCalendar.scss\";\r\n\r\nfunction MiniCalendar(props) {\r\n\tconst [date, setDate] = useState(new Date());\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.onChange(date);\r\n\t}, [date]);\r\n\r\n\tconst handleDate = (txt) => {\r\n\t\tif (txt === \"back\") {\r\n\t\t\tsetDate(subDays(date, 1));\r\n\t\t}\r\n\t\tif (txt === \"next\") {\r\n\t\t\tsetDate(addDays(date, 1));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"miniCalendarC\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"superior\">\r\n\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t<div className=\"nameDay\">\r\n\t\t\t\t\t\t\t{format(date, \"eeee\", { locale: es })}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"day\"> {format(date, \"dd\")} </div>\r\n\t\t\t\t\t\t<div className=\"month\">\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t{format(date, \"MMMM\", { locale: es })}{\" \"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"year\"> {format(date, \"yyyy\")} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} locale={es}>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tautoOk\r\n\t\t\t\t\t\t\t\tvariant=\"static\"\r\n\t\t\t\t\t\t\t\topenTo=\"date\"\r\n\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\t\t\tonChange={(d) => setDate(d)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inferior\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleDate(\"back\");\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{\"<\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetDate(new Date());\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\thoy\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleDate(\"next\");\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{\">\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MiniCalendar;\r\n","C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Clock.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\POS\\POS.jsx",[],"C:\\Users\\rdelrio\\www\\barbermx\\src\\components\\Home\\Cart\\Cart.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":53,"column":5,"nodeType":"101","endLine":53,"endColumn":11,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":66,"column":5,"nodeType":"101","endLine":66,"endColumn":7,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":76,"column":5,"nodeType":"101","endLine":76,"endColumn":23,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":37,"column":5,"nodeType":"101","endLine":37,"endColumn":7,"suggestions":"108"},{"ruleId":"99","severity":1,"message":"109","line":15,"column":5,"nodeType":"101","endLine":15,"endColumn":11,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentDate' and 'getRangeOfTimeAndEvents'. Either include them or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has missing dependencies: 'findCheckedOnEdit' and 'props.editFlag'. Either include them or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'services.length'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'currentDate'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [currentDate, getRangeOfTimeAndEvents, view]",{"range":"128","text":"129"},"Update the dependencies array to be: [findCheckedOnEdit, props.editFlag]",{"range":"130","text":"131"},"Update the dependencies array to be: [services.length, servicesSelected]",{"range":"132","text":"133"},"Update the dependencies array to be: [currentDate]",{"range":"134","text":"135"},"Update the dependencies array to be: [date, props]",{"range":"136","text":"137"},[1324,1330],"[currentDate, getRangeOfTimeAndEvents, view]",[2442,2444],"[findCheckedOnEdit, props.editFlag]",[2682,2700],"[services.length, servicesSelected]",[1113,1115],"[currentDate]",[438,444],"[date, props]"]